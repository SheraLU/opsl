//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: codeDcps.cpp
//  Source: codeDcps.idl
//  Generated: Tue Oct 30 22:02:02 2018
//  OpenSplice 6.7.180404OSS
//  
//******************************************************************

#include "codeDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < CodeData::Code, struct CodeSeq_uniq_>;
#endif

const char * CodeData::CodeTypeSupportInterface::_local_id = "IDL:CodeData/CodeTypeSupportInterface:1.0";

CodeData::CodeTypeSupportInterface_ptr CodeData::CodeTypeSupportInterface::_duplicate (CodeData::CodeTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean CodeData::CodeTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, CodeData::CodeTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

CodeData::CodeTypeSupportInterface_ptr CodeData::CodeTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   CodeData::CodeTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (CodeData::CodeTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < CodeData::CodeTypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

CodeData::CodeTypeSupportInterface_ptr CodeData::CodeTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   CodeData::CodeTypeSupportInterface_ptr result;
   result = dynamic_cast < CodeData::CodeTypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * CodeData::CodeDataWriter::_local_id = "IDL:CodeData/CodeDataWriter:1.0";

CodeData::CodeDataWriter_ptr CodeData::CodeDataWriter::_duplicate (CodeData::CodeDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean CodeData::CodeDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, CodeData::CodeDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

CodeData::CodeDataWriter_ptr CodeData::CodeDataWriter::_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataWriter_ptr result = NULL;
   if (p && p->_is_a (CodeData::CodeDataWriter::_local_id))
   {
      result = dynamic_cast < CodeData::CodeDataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

CodeData::CodeDataWriter_ptr CodeData::CodeDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataWriter_ptr result;
   result = dynamic_cast < CodeData::CodeDataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * CodeData::CodeDataReader::_local_id = "IDL:CodeData/CodeDataReader:1.0";

CodeData::CodeDataReader_ptr CodeData::CodeDataReader::_duplicate (CodeData::CodeDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean CodeData::CodeDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, CodeData::CodeDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

CodeData::CodeDataReader_ptr CodeData::CodeDataReader::_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataReader_ptr result = NULL;
   if (p && p->_is_a (CodeData::CodeDataReader::_local_id))
   {
      result = dynamic_cast < CodeData::CodeDataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

CodeData::CodeDataReader_ptr CodeData::CodeDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataReader_ptr result;
   result = dynamic_cast < CodeData::CodeDataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * CodeData::CodeDataReaderView::_local_id = "IDL:CodeData/CodeDataReaderView:1.0";

CodeData::CodeDataReaderView_ptr CodeData::CodeDataReaderView::_duplicate (CodeData::CodeDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean CodeData::CodeDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, CodeData::CodeDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

CodeData::CodeDataReaderView_ptr CodeData::CodeDataReaderView::_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataReaderView_ptr result = NULL;
   if (p && p->_is_a (CodeData::CodeDataReaderView::_local_id))
   {
      result = dynamic_cast < CodeData::CodeDataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

CodeData::CodeDataReaderView_ptr CodeData::CodeDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   CodeData::CodeDataReaderView_ptr result;
   result = dynamic_cast < CodeData::CodeDataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



